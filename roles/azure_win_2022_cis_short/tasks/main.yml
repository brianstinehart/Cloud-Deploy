---

- name: Display Banner
  ansible.builtin.debug:
      msg: "{{ lockdown_banner.split('\n') }}"
  tags:
      - always

- name: Gather distribution info
  ansible.builtin.setup:
      gather_subset: distribution,!all,!min
  when:
      - ansible_distribution is not defined
  tags:
      - always

- name: Check OS version and family
  ansible.builtin.assert:
      that:
          - ansible_os_family == 'Windows'
          - ansible_distribution | regex_search('(Microsoft Windows Server 2022)')
      success_msg: "{{ ansible_distribution }} {{ ansible_distribution_major_version }} is the detected operating system."
      fail_msg: "This role can only be run against Windows Server 2022 Editions. {{ ansible_distribution }} {{ ansible_distribution_major_version }} is not supported."
  tags:
      - always

- name: Check ansible version
  ansible.builtin.assert:
      that: ansible_version.full is version_compare(min_ansible_version, '>=')
      msg: You must use Ansible {{ min_ansible_version }} or greater
  tags:
      - always

- name: Get Windows installation type
  ansible.windows.win_reg_stat:
      path: HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion
      name: InstallationType
  register: get_windows_installation_type
  tags:
      - always

- name: Set Windows installation type
  ansible.builtin.set_fact:
      windows_installation_type: "{{ get_windows_installation_type.value | default('') }}"
  tags:
      - always

- name: Include the preliminary tasks
  ansible.builtin.import_tasks:
      file: prelim.yml
  tags:
      - prelim_tasks

- name: Execute the section 1 tasks
  ansible.builtin.import_tasks:
      file: section01.yml
  when:
      - win22cis_section01
  tags:
      - section01

# - name: Execute the section 2 tasks
#   ansible.builtin.import_tasks:
#       file: section02.yml
#   when:
#       - win22cis_section02
#   tags:
#       - section02

# - name: Execute the section 5 tasks
#   ansible.builtin.import_tasks:
#       file: section05.yml
#   when:
#       - win22cis_section05
#   tags:
#       - section05

# - name: Execute the section 9 tasks
#   ansible.builtin.import_tasks:
#       file: section09.yml
#   when:
#       - win22cis_section09
#   tags:
#       - section09

# - name: Execute the section 17 tasks
#   ansible.builtin.import_tasks:
#       file: section17.yml
#   when:
#       - win22cis_section17
#   tags:
#       - section17

# - name: Execute the section 18 tasks
#   ansible.builtin.import_tasks:
#       file: section18.yml
#   when:
#       - win22cis_section17
#   tags:
#       - section18

# - name: Execute the section 19 tasks
#   ansible.builtin.import_tasks:
#       file: section19.yml
#   when:
#       - win22cis_section19
#   tags:
#       - section19

- name: If Warnings found Output count and control IDs affected
  ansible.builtin.debug:
      msg:
          - "You have {{ warn_count }} Warning(s) that require investigation(s). Their IDs are listed below:"
          - "{{ warn_control_list }}"
  when: warn_count != 0

- name: Update ServiceNow Ticket Work Notes 
  ansible.builtin.set_stats:
    data:
      snow_note: "CIS compliance check complete. The following configuration items are not aligned with the CIS benchmark:
                  Ensure Minimum password age is set to 1 or more days
                  Ensure Minimum password length is set to 14 or more characters
                  Ensure Account lockout threshold is set to 5 or fewer invalid logon attempts
                  Ensure Account lockout duration is set to 15 or more minutes
                  Ensure Reset account lockout counter after is set to 15 or more minutes"

# - name: Update ServiceNow ticket to indicate instance creation
#   servicenow.itsm.api:
#     instance:
#       host: "{{ snow_instance }}"
#       username: "{{ snow_username }}"
#       password: "{{ snow_password }}"

#     resource: sc_request
#     action: patch
#     sys_id: "{{ sys_id }}"
#     data:
#       work_notes: "CIS compliance check complete. The following configuration items are not aligned with the CIS benchmark
#                   Ensure Minimum password age is set to 1 or more days
#                   Ensure Minimum password length is set to 14 or more characters
#                   Ensure Account lockout threshold is set to 5 or fewer invalid logon attempts
#                   Ensure Account lockout duration is set to 15 or more minutes
#                   Ensure Reset account lockout counter after is set to 15 or more minutes"
#   when: sys_id is defined

# - name: Update ServiceNow ticket to indicate instance creation
#   servicenow.itsm.api:
#     instance:
#       host: "{{ snow_instance }}"
#       username: "{{ snow_username }}"
#       password: "{{ snow_password }}"

#     resource: sc_request
#     action: patch
#     sys_id: "{{ sys_id }}"
#     data:
#       work_notes: "CIS compliance check complete. The following configuration items are not aligned with the CIS benchmark: Ensure Minimum password age; Ensure Minimum password length; Ensure Account lockout threshold; Ensure Account lockout duration ; Ensure Reset account lockout counter"
#   when: sys_id is defined
